name: Build Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        python -c "import sys; print(f'Python version: {sys.version}')"
        python -c "import platform; print(f'Platform: {platform.platform()}')"
        
    - name: Generate icons
      run: python convert_icons.py
      
    - name: Build Windows executable
      run: |
        echo "Starting Windows build..."
        pyinstaller torrent_downloader_win.spec
        echo "Build completed. Checking dist directory..."
        dir dist
      
    - name: Create Windows ZIP
      run: |
        cd dist
        echo "Creating ZIP archive..."
        Compress-Archive -Path TorrentDownloader -DestinationPath TorrentDownloader-Windows.zip
        echo "ZIP created. Checking file size..."
        Get-Item TorrentDownloader-Windows.zip | Select-Object Length
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v2
      with:
        name: TorrentDownloader-Windows
        path: dist/TorrentDownloader-Windows.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        brew install libtorrent-rasterbar
        python -c "import sys; print(f'Python version: {sys.version}')"
        python -c "import platform; print(f'Platform: {platform.platform()}')"
        
    - name: Generate icons
      run: |
        echo "Generating icons..."
        python convert_icons.py
        echo "Checking generated icons..."
        ls -l icon.*
      
    - name: Build macOS application
      run: |
        echo "Starting macOS build..."
        pyinstaller torrent_downloader.spec
        echo "Build completed. Checking dist directory..."
        ls -la dist
      
    - name: Create macOS ZIP
      run: |
        cd dist
        echo "Creating ZIP archive..."
        zip -r TorrentDownloader-macOS.zip TorrentDownloader.app
        echo "ZIP created. Checking file size..."
        ls -lh TorrentDownloader-macOS.zip
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v2
      with:
        name: TorrentDownloader-macOS
        path: dist/TorrentDownloader-macOS.zip 